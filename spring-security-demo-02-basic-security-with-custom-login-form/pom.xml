<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.luv2code</groupId>
	<artifactId>spring-security-demo</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>

	<name>spring-security-demo</name>

	<!-- spring framework and spring security, we must match the correct versions 
		by searching "spring-security-web" inside maven.org's central repository. 
		Version for spring framework will be in the POM list. take version for "<artifactId>spring-context</artifactId>". -->
	<properties>
		<springframework.version>5.2.20.RELEASE</springframework.version>
		<springsecurity.version>5.3.2.RELEASE</springsecurity.version>

		<!-- these two need to be same as java version installed in our computer! -->
		<maven.compiler.source>13</maven.compiler.source>
		<maven.compiler.target>13</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- Spring MVC support -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>



		<!-- spring security -->
		<!-- spring-security-web and spring-security-config -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>



		<!-- add Spring Security tagLibs support. This will allow us to display 
			user roles. we need to add Spring Security JSP Tag Library(tagLib) to .jsp 
			page -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		
		<!-- adding MySQL and C3P0(this is connection pool) support -->
		<!-- we need MySQL and c3p0 support to set Spring security username and password inside JDBC database! -->
		<!-- if we get the red x mark on the project while adding this dependencies, just rightClick on project ... Maven ..
		     then click on updateProject, this should fix similar issues! -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.45</version>
		</dependency>
		
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.4</version>
		</dependency>


		<!-- Servlet, JSP and JSTL support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
			<version>4.0.1</version>
		</dependency>


		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.3</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>



		<!-- to compensate for java 9+ not including jaxb -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<scope>test</scope>
			<version>2.4.0-b180830.0359</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.12</version>
		</dependency>

	</dependencies>

	<!-- TO DO: Add support for Maven WAR Plugin -->
	<build>
		<finalName>spring-security-demo</finalName>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Add Maven coordinates (GAV) for: maven-war-plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>
			</plugins>

		</pluginManagement>
	</build>



</project>
